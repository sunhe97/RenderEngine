cmake_minimum_required(VERSION 3.8)
project(Glad)

# Variables for build configurations
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(BUILD_CONFIG "debug")
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    set(BUILD_CONFIG "release")
else()
    set(BUILD_CONFIG ${CMAKE_BUILD_TYPE})
endif()

# 获取系统名称
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(SYSTEM_NAME "windows")
elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(SYSTEM_NAME "linux")
else()
    set(SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
endif()

# 获取处理器架构
if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
    set(ARCHITECTURE "x64")
else()
    set(ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
endif()

# 设置outputdir
set(OUTPUT_DIR "${BUILD_CONFIG}-${SYSTEM_NAME}-${ARCHITECTURE}")
# Glad library
set(GLAD_SRC
    include/glad/glad.h
    include/KHR/khrplatform.h
    src/glad.c
)

add_library(Glad STATIC ${GLAD_SRC})

target_include_directories(Glad PUBLIC
    include
)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    add_definitions(-DHZ_DEBUG)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MD")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O1")
endif()


if(CMAKE_BUILD_TYPE STREQUAL "Release")
    add_definitions(-DHZ_RELEASE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MT")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2")
endif()

# Configuration specific options
#if(WIN32)
#    target_compile_options(Glad PRIVATE
#        $<$<CONFIG:Release>:/MD>
#    )
#endif()
#
## Configuration specific definitions
#target_compile_definitions(Glad PRIVATE
#    $<$<CONFIG:Debug>:DEBUG>
#    $<$<CONFIG:Release>:NDEBUG>
#)

# Configuration specific features
set_target_properties(${PROJECT_NAME} PROPERTIES
        ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin/${OUTPUT_DIR}/${PROJECT_NAME}"
        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin/${OUTPUT_DIR}/${PROJECT_NAME}"
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin/${OUTPUT_DIR}/${PROJECT_NAME}"
        )